# This is a basic workflow to help you get started with Actions

name: CI-CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  CI:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Docker hub login
      - name: Docker Login
        uses: docker/login-action@v1.10.0
        with:          
          # Username used to log against the Docker registry
          username: ${{ secrets.DOCKERHUB_USER }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.DOCKERHUB_PWD }}
      
      # Build and push Docker image
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          tags: |
            brunogomesmottta/rotten-potatoes:latest
            brunogomesmottta/rotten-potatoes:${{ github.run_number }}
      
  CD:
    needs: [ CI ]
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Kubernetes set context
        uses: Azure/k8s-set-context@v1.1
        with:
          # Acceptable values: generic or arc
          cluster-type: # default is generic
          # Acceptable values: kubeconfig or service-account or service-principal
          method: kubeconfig
          # Kubernetes Config
          kubeconfig: ${{ secrets.K8S_CONFIG }}
          # If your kubeconfig has multiple contexts, use this field to use a specific context, otherwise the default one would be chosen
          context: # optional, default is 
          # Cluster Url
          k8s-url: # optional, default is 
          # Service account secret. Run kubectl get serviceaccounts <service-account-name> -o yaml and copy the service-account-secret-name. Copy the ouptut of kubectl get secret <service-account-secret-name> -o yaml
          k8s-secret: # optional, default is 
          # Token extracted from the secret of service account (should be base 64 decoded)
          token: # optional, default is 
          # Azure resource group name
          resource-group: # optional, default is 
          # Azure connected cluster name
          cluster-name: # optional, default is 
      
    
